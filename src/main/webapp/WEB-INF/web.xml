<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	version="4.0">

	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<!-- classpath 현재 4곳 main/java, main/resources, test/java, test/resources -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:config/spring/root-context.xml</param-value>
	</context-param>
	<context-param>
		<param-name>log4jdbcLog4j2ConfigLocation</param-name>
		<param-value>/config/properties/log4jdbc.log4j2.properties</param-value>
	</context-param>

	<!-- Log4jdbc 설정 properties 경로를 설정하는 리스너 -->
	<listener>
		<listener-class>kr.or.arthakdang.framework.web.context.Log4jdbcLog4j2ConfigListener</listener-class>
	</listener>
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>



	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:config/spring/servlet-context.xml</param-value>
		</init-param>
		<!-- Tomcat이 Exception을 던지도록 함. 이것을 안하면 단지 맵핑 URL이 없다고 뜬다. -->
		<init-param>
			<param-name>throwExceptionIfNoHandlerFound</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		
		<multipart-config>
			<location>C:\\upload\\</location> <!-- 가져온 파일의 크기를 넘어가면(메모리 초과) 이곳에 저장, 파일임시 저장소 -->
			<max-file-size>20971520</max-file-size> <!-- 파일 최대용량 1MB * 20 -->
			<max-request-size>41943040</max-request-size> <!-- 요청 최대용량 40MB -->
			<file-size-threshold>20971520</file-size-threshold> <!-- 메모리상 최대용량 20MB -->
		</multipart-config>
	</servlet>

	<!-- /*로 하면 완전 모든 것을 spring에서 처리하겠다는 의미 -->
	<!-- /로하면 일부 Tomcat의 Default DispatcherServlet이 처리 -->
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 한글 깨짐 방지 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>springMultipartFilter</filter-name>
		<filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springMultipartFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 스프링 시큐리티 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
